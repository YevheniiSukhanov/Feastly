Проєкт "Feastly"
	Цей проєкт є інтерактивним планувальником тижневого меню, що дозволяє користувачам легко додавати рецепти до різних днів тижня та прийомів їжі за допомогою функціоналу перетягування (Drag-and-Drop).
Використані технології
	Next.js: Сучасний React-фреймворк для побудови веб-застосунків із серверним рендерингом та ефективною маршрутизацією. 
	React: Бібліотека JavaScript для створення користувацьких інтерфейсів. 
	TypeScript: Типізований надмножина JavaScript, що забезпечує підвищену надійність та передбачуваність коду. 
	Next.js Server Actions: Механізм для виконання серверного коду безпосередньо з клієнтських компонентів, що використовується для збереження даних. 
	MySQL: Реляційна система управління базами даних. У цьому проєкті реалізована повна підтримка та взаємодія з базою даних MySQL для зберігання рецептів та планів меню.

Функціонал

	Перегляд рецептів: Список доступних рецептів, готових до додавання в меню.
	Тижнева сітка меню: Інтуїтивно зрозуміла сітка, що відображає дні тижня та прийоми їжі (сніданок, обід, вечеря, перекус).
	Drag-and-Drop: Можливість перетягувати рецепти зі списку на відповідні слоти в сітці меню.
	Призначення рецептів: Призначення конкретного рецепта певному дню та прийому їжі.
	Видалення рецептів: Можливість видалити рецепт зі слота меню.
	Збереження меню: Збереження поточного стану тижневого меню в "базі даних".

Структура Проєкту
	src/app/meal-plans/page.tsx: Головна сторінка тижневого меню, що завантажує дані та рендерить компонент MealPlanBoard.
src/components/meal-plans/: 
MealPlanBoard.tsx: Основний клієнтський компонент, що реалізує сітку меню та логіку Drag-and-Drop.
RecipeCard.tsx: Компонент для відображення окремого рецепта, який можна перетягувати.
src/components/recipes/RecipeForm.tsx: Форма для додавання нових рецептів (якщо використовується сторінка /recipes/add).
src/lib/db.ts: Модуль, що імітує взаємодію з базою даних для рецептів та планів меню.
src/lib/actions.ts: Містить Next.js Server Actions для додавання рецептів та збереження планів меню.
src/types/: Директорія для централізованого визначення інтерфейсів та типів даних (recipe.ts, meal-plan.ts).

Встановлення та Запуск

Щоб запустити проєкт локально, виконайте наступні кроки:

	Клонуйте репозиторій (якщо він у вас є) або створіть новий проєкт та скопіюйте файли.
	Перейдіть до кореневої директорії проєкту:
		cd ваш_проєкт
	Встановіть залежності:
		npm install
	Запустіть сервер розробки:
		npm run dev
	Відкрийте застосунок у браузері:
		Перейдіть за адресою http://localhost:3000/.

Як Користуватися
Тижневий планувальник:
1. На головній сторінці натиснути «Перейти до Планувальника»
2. На сторінці /meal-plans ви побачите список Доступних Рецептів зліва та Тижневе Меню справа.
3. Перетягніть (Drag-and-Drop) будь-який рецепт зі списку «Доступні Рецепти» у порожній слот для прийому їжі (наприклад, «Понеділок – Обід»).
4. Назва рецепта з'явиться у слоті.
5. Щоб видалити рецепт зі слота, натисніть ? поруч із назвою рецепта в слоті.
6. Щоб зберегти зміни у вашому тижневому меню, натисніть кнопку "Зберегти Меню" внизу сітки.
Додавання рецепту:
1. На головній сторінці натиснути «Додати новий Рецепт»
2. Ввести потрібні дані до відповідних полів
3. Натиснути «Додати Рецепт»

Редагування рецепту:

1. На головній сторінці натиснути «Переглянути всі Рецепти»
2. Під потрібним рецептом натиснути «Деталі та редагування»
3. Натиснути «Редагувати рецепт»
4. Внести потрібні зміни і натиснути «Оновити рецепт»

Видалення рецепту:

1. На головній сторінці натиснути «Переглянути всі Рецепти»
2. Під потрібним рецептом натиснути «Деталі та редагування»
3. Натиснути «Видалити Рецепт» 





